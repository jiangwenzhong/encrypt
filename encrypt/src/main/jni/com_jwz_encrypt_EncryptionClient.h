/**
 * Copyright 2019 蒋文忠
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_jwz_encrypt_EncryptionClient */

#ifndef _Included_com_jwz_encrypt_EncryptionClient
#define _Included_com_jwz_encrypt_EncryptionClient
#ifdef __cplusplus
extern "C" {
#endif

JNIEXPORT jstring JNICALL
Java_com_jwz_encrypt_EncryptionClient_randomEncryptKey(JNIEnv *env, jclass type);
/*
 * Class:     com_jwz_encrypt_EncryptionClient
 * Method:    signWithSalt
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_jwz_encrypt_EncryptionClient_md5WithSalt
        (JNIEnv *, jclass, jstring);

/*
 * Class:     com_jwz_encrypt_EncryptionClient
 * Method:    encrypt
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_jwz_encrypt_EncryptionClient_encryptByDes
        (JNIEnv *, jclass, jstring);

/*
 * Class:     com_jwz_encrypt_EncryptionClient
 * Method:    decrypt
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_jwz_encrypt_EncryptionClient_decryptByDes
        (JNIEnv *, jclass, jstring);

#ifdef __cplusplus
}
#endif
#endif